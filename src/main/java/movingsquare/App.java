/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package movingsquare;

import movingsquare.squares.*;
import processing.core.PApplet;
import processing.core.PImage;

import java.util.ArrayList;
import java.util.List;

public class App extends PApplet {

    List<Invader> invaders;
    ArrayList<Projectile> projectiles;

    Tank tank;
    Invader invader;
    PImage[] left_barrier;
    PImage[] right_barrier;
    PImage[] solid_barrier;
    PImage[] top_barrier;
    PImage result_img;
    ArrayList<Barrierpart> barrierparts;

    ArrayList<PImage[]> barrierimg;
    int barrier_height = 480-26-24;
    int horiflag = 1;

    public App() {
        invaders = new ArrayList<>();
        barrierparts = new ArrayList<>();

        barrierimg = new ArrayList<>();
        projectiles = new ArrayList<>();

    }
    
    public void settings() {
        size(640, 480);
    }
    
    public void setup() {
        frameRate(60);

        for (int i = 153; i < 442;i = i+32){

            for(int y = 0; y < 97; y = y+32 ) {
                invaders.add(new Invader(loadImage("invader1.png"), i, y, 16, 16, new int[]{1, 1}));
            }
        }

        tank = new Tank(loadImage("tank1.png"), 309, 464, 22, 16, new int[] {2, 1});

        left_barrier = new PImage[]{loadImage("barrier_left1.png"),loadImage("barrier_left2.png"),loadImage("barrier_left3.png"),loadImage("empty.png")};
        right_barrier = new PImage[]{loadImage("barrier_right1.png"),loadImage("barrier_right2.png"),loadImage("barrier_right3.png"),loadImage("empty.png")};
        solid_barrier = new PImage[]{loadImage("barrier_solid1.png"),loadImage("barrier_solid2.png"),loadImage("barrier_solid3.png"),loadImage("empty.png")};
        top_barrier = new PImage[]{loadImage("barrier_top1.png"),loadImage("barrier_top2.png"),loadImage("barrier_top3.png"),loadImage("empty.png")};
        barrierimg.add(left_barrier);
        barrierimg.add(right_barrier);
        barrierimg.add(solid_barrier);
        barrierimg.add(top_barrier);

        for(int num_X =200;num_X<420;num_X = num_X+108){

            int[][] x_ys = new int[][]{{num_X,barrier_height,0},{num_X+8,barrier_height,3},{num_X+16,barrier_height,1},
                                                                {num_X,barrier_height+8,2},{num_X+16,barrier_height+8,2},
                                                                {num_X,barrier_height+16,2},{num_X+16,barrier_height+16,2}
                                        };




            for(int[] x_y: x_ys){
                barrierparts.add(new Barrierpart(barrierimg.get(x_y[2]), x_y[0], x_y[1], 8, 8, new int[]{0, 0}));

            }
            System.out.println(barrierparts.size());
        }

    }







    
    public void draw() {

        System.out.println("new frame: +++++++++++++++++++++++++++++++++");
        background(0);

        if(invaders.size() == 0){
            size(640, 480);

            result_img = loadImage("nextlevel.jpg");  // Load the image into the program
            image(result_img, 170, 200, 300, 80);

        }

        int move_flag = 0;
        if (keyPressed) {
            if(keyCode == LEFT ){
                move_flag = -1;
            }else if( keyCode == RIGHT){
                move_flag = 1;
            }
//            System.out.println(keyCode);

            if (keyCode == 0 ){
                int[] tank_location = tank.getlocation();
                Projectile bullet = new Projectile(loadImage("projectile.png"),tank_location[0]+11 , tank_location[1]+3, 1, 3, new int[] {0, 1});
                bullet.setDir(-1);


                projectiles.add(bullet);


            }

            tank.move(move_flag);
            move_flag = 0;
        }



        if (frameCount % 68 == 0 && frameCount!=0) {
            horiflag = horiflag * (-1);
        }

        int i_length = (int) invaders.size();

        int counter = 0;

        while (counter<i_length){

            if (!invaders.get(counter).isAlive()) {
                invaders.remove(counter);
                i_length--;
            }else {
                counter ++ ;
            }
        }






        for(Invader invader: invaders){
            invader.setImg(loadImage("invader1.png"));

            if (invader.getY()>480){

                invader = null;

            }else {

                if(frameCount%68 > 60){
                    invader.automove(0,1);
                    invader.setImg(loadImage("invader2.png"));
                }



                if(frameCount%2 ==0){
                    invader.automove(horiflag,0);
                }
                invader.draw(this);
            }



        }


        for (Barrierpart b: barrierparts){
            b.draw(this);
        }


        int b_length = (int) barrierparts.size();

        counter = 0;

        while (counter<b_length){

            if (barrierparts.get(counter).getDamage_count() >2) {
                System.out.println(barrierparts.get(counter).getDamage_count());
                barrierparts.remove(counter);
                b_length--;
            }else {
                counter ++ ;
            }
        }






        for(Projectile p : projectiles){
            p.move();
            p.draw(this);
        }



        int p_length = (int) projectiles.size();

        counter = 0;

        while (counter<p_length){
//            System.out.println(counter);
//            System.out.println(p_length);

            Projectile p = projectiles.get(counter);
            if(p.getLocation()[1] < -10 || p.getLocation()[1]>480){
                projectiles.remove(counter);
                p_length --;

            }else {
                System.out.println("this bullet is from tank");

                boolean ischange = false;

                boolean isfromtank = p.isfromtank();
                int[] p_location = p.getLocation();


//                System.out.println(counter);


//                System.out.println("++++++++++++++++++++++++++++++++++");
//                System.out.println(p_location[0]+"---"+p_location[1]);
//                System.out.println("==================================");

                loop: for(Barrierpart b: barrierparts){
                    int[] b_location = b.getLocation();

                    System.out.println(b_location[0]+"---"+b_location[1]);


                    if(isfromtank) {
                        if ((p_location[0] >= b_location[0]) && (p_location[0] <= b_location[0] + 8) && (p_location[1]  <= b_location[1] + 8)) {

                            b.setDamage_count();
                            projectiles.remove(counter);
                            ischange = true;



                            break loop;

                        }
                    }else {
                        if ((p_location[0] >= b_location[0]) && (p_location[0] <= b_location[0] + 8) && (p_location[1] + 3 >= b_location[1])) {
                            b.setDamage_count();
                            projectiles.remove(counter);
                            ischange = true;

//                            System.out.println(b.getDamage_count());
                            break loop;

                        }
                    }

                }

                if(ischange){

                }else {
                    loop2: for(Invader i: invaders){
                        int[] i_location = i.getLocation();

//                        System.out.println(i_location[0]+"---"+i_location[1]);


                        if(isfromtank) {
                            if ((p_location[0] >= i_location[0]) && (p_location[0] <= i_location[0] + 8) && (p_location[1]  <= i_location[1] + 16)) {

                                projectiles.remove(counter);
                                ischange = true;

                                i.setAlive(false);

                                break loop2;

                            }
                        }else {
                        }

                    }

                }






                if(ischange){
                    p_length --;

                }else {
                    counter ++;
                }


            }
        }




        tank.draw(this);
    }
    
    public static void main(String[] args) {

        PApplet.main("movingsquare.App");
    }
}
